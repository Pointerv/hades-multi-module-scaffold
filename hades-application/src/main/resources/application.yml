server:
  port: 9999
  tomcat:
    remote-ip-header: x-forwarded-for
    protocol-header: x-forwarded-proto
    port-header: X-Forwarded-Port
  use-forward-headers: true
spring:
  profiles:
    active: develpment
  jackson:
    serialization:
      indent-output: true
logging:
  file: ../infos/logs/hades-platform.log
  level:
    root: INFO
    org:
      springframework: INFO
      hibernate: INFO
      ehcache: INFO
      flowable: INFO
      apache:
        shiro: INFO
    cn:
      com:
        felix: DEBUG

flowable:
  async-executor-activate: false
  database-schema-update: true
  common:
    app:
      idm-url: /flowable
      idm-admin:
        user: admin
        password: test
  modeler:
    app:
      deployment-api-url: http://localhost:${server.port}/flowable-task/process-api

jasypt:
  encryptor:
    password: 4cd3bd5b-d02f-4d36-8159-9711adbdb7ce

wx:
  test: true
  miniapp:
    configs:
      - appid: wxfa1
        secret: ce21a6
        token: #微信小程序消息服务器配置的token
        aesKey: #微信小程序消息服务器配置的EncodingAESKey
        msgDataFormat: JSON

# shiro配置
shiro:
  session:
    sessionIdCookie:
      name: HADESSESSIONID
      path: /
      max-age: -1
    global-session-timeout: 1800000
    delete-invalid-sessions: true
    session-id-cookie-enabled: true
    session-id-url-rewriting-enabled: false
    session-validation-scheduler-enabled: true
    session-validation-interval: 1800000

  remember-me:
    cookie-cipher-key: T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')
    cookie:
      name: REMEMBERME
      path: /
      max-age: 259200 # 记住我cookie生效时间，默认30天，单位秒：60 * 60 * 24 * 30

  login-url: /login
  success-url: /home
  unauthorized-url: /401
  invalid-login-code: 418
  invalid-permission-code: 401
  service-oriented: false
  stored-credentials-hex-encoded: true
  log-in-out-response-key: success
  hash-algorithm-name: MD5
  hash-iterations: 2
  kickout-max-session: 1
  kickout-after: false
  error-times: 5
  retry-limit: 5
  switch-cache-to-redis: true
  share-session-with-redis: false
  cache-file-path: classpath:configuration/ehcache-shiro.xml

---
# 开发环境配置
spring:
  profiles: develpment
  datasource:
    continue-on-error: true
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    url: jdbc:p6spy:postgresql://localhost:5432/framework
    username: ENC(bnt9blTLizvd1ezq26X+l2U5kY9cRuWr)
    password: ENC(Rf/jYSvkmXp9gRFyj99lyvQhdYv89xsE)
    initialization-mode: always
    data-username: ENC(bnt9blTLizvd1ezq26X+l2U5kY9cRuWr)
    data-password: ENC(Rf/jYSvkmXp9gRFyj99lyvQhdYv89xsE)
    schema-password: ENC(bnt9blTLizvd1ezq26X+l2U5kY9cRuWr)
    schema-username: ENC(Rf/jYSvkmXp9gRFyj99lyvQhdYv89xsE)
    #    schema: classpath:sql/schema-postgresql.sql
    data: classpath:sql/data-postgresql.sql
    sql-script-encoding: UTF-8
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      # Lowest acceptable connection timeout is 250 ms. Default: 30000 (30 seconds)
      connection-timeout: 5000
      connection-test-query: SELECT 1
      # The minimum allowed value is 10000ms (10 seconds). Default: 600000 (10 minutes)
      idle-timeout: 600000
      minimum-idle: 5
      maximum-pool-size: 50
      # We strongly recommend setting this value, and it should be at least 30 seconds less than any database or infrastructure imposed connection time limit.
      # Default: 1800000 (30 minutes)
      max-lifetime: 1800000
      pool-name: Hikari
      # Lowest acceptable validation timeout is 250 ms. Default: 5000
      validation-timeout: 5000
      data-source-properties:
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        cachePrepStmts: true
  jpa:
    database: postgresql
    generate-ddl: true
    open-in-view: true
    hibernate:
      # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.spring.jpa.hibernate.ddl-auto=update
      ddl-auto: update
      naming:
        physical-strategy: cn.com.felix.core.extend.hibernate.CustomPhysicalNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
        format_sql: false
        show_sql: false
        generate_statistics: false
        cache:
          use_query_cache: true
          use_second_level_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        javax:
          cache:
            missing_cache_strategy: create
            provider: org.ehcache.jsr107.EhcacheCachingProvider
          persistence:
            sharedCache:
              mode: ALL
        temp:
          use_jdbc_metadata_defaults: false
  cache:
    jcache:
      config: classpath:/ehcache.xml

  thymeleaf:
    mode: HTML
    cache: false
    prefix: classpath:/templates
    excluded-view-names: /flowable-modeler/index.html
  redis:
    database: 0
    host: 127.0.0.1
    #    password:
    port: 6379
    timeout: 10000
    # 如果使用的jedis 则将lettuce改成jedis即可
    lettuce:
      pool:
        # 最大活跃链接数 默认8
        max-active: 10
        max-wait: 10000
        # 最大空闲连接数 默认8
        max-idle: 10
        # 最小空闲连接数 默认0
        min-idle: 5

  server:
    port: ${server.port}
    # Thread 和 CPU 配置
    acceptor-thread-count: 4
    min-spare-threads: 50
    max-spare-threads: 50
    max-threads: 1000
    max-connections: 10000
    # 10秒超时
    connection-timeout: 10000
    redirect-port: 443
    compression: on
    # 文件请求大小
    max-file-size: 300MB
    max-request-size: 500MB

  data:
    redis:
      repositories:
        enabled: false

  sms:
    type: qcloud
    qcloud:
      active: true
      appid: 140
      appkey: 396a2
      templates: {'ORDER_NOTICE': 295}
      sign: cracoder


#  quartz:
#    # quartz 相关属性配置
#    properties:
#      org:
#        quartz:
#          scheduler:
#            instanceName: clusteredScheduler
#            instanceId: AUTO
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#            tablePrefix: qrtz_
#            isClustered: true
#            clusterCheckinInterval: 10000
#            useProperties: false
#          threadPool:
#            class: org.quartz.simpl.SimpleThreadPool
#            threadCount: 10
#            threadPriority: 5
#            threadsInheritContextClassLoaderOfInitializingThread: true
#    #数据库方式
#    job-store-type: jdbc
---
# 生产环境配置
spring:
  profiles: production
  datasource:
    continue-on-error: true
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:15432/connection
    username: ENC(XQs+ZeoICjh8eGQv15AmkBxC2zFVSTTJ)
    password: ENC(Vy4Ho5F4oVM01X7aVyLt0Z4qUZMRKV5N)
    initialization-mode: always
    data-username: ENC(XQs+ZeoICjh8eGQv15AmkBxC2zFVSTTJ)
    data-password: ENC(Vy4Ho5F4oVM01X7aVyLt0Z4qUZMRKV5N)
    schema-password: ENC(XQs+ZeoICjh8eGQv15AmkBxC2zFVSTTJ)
    schema-username: ENC(Vy4Ho5F4oVM01X7aVyLt0Z4qUZMRKV5N)
    #    schema: classpath:sql/schema-postgresql.sql
    data: classpath:sql/data-postgresql.sql
    sql-script-encoding: UTF-8
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      # Lowest acceptable connection timeout is 250 ms. Default: 30000 (30 seconds)
      connection-timeout: 5000
      connection-test-query: SELECT 1
      # The minimum allowed value is 10000ms (10 seconds). Default: 600000 (10 minutes)
      idle-timeout: 600000
      minimum-idle: 5
      maximum-pool-size: 50
      # We strongly recommend setting this value, and it should be at least 30 seconds less than any database or infrastructure imposed connection time limit.
      # Default: 1800000 (30 minutes)
      max-lifetime: 1800000
      pool-name: Hikari
      # Lowest acceptable validation timeout is 250 ms. Default: 5000
      validation-timeout: 5000
      data-source-properties:
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        cachePrepStmts: true

  cache:
    jcache:
      config: classpath:/ehcache.xml
  jpa:
    database: postgresql
    generate-ddl: true
    open-in-view: true
    hibernate:
      # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.spring.jpa.hibernate.ddl-auto=update
      ddl-auto: update
      naming:
        physical-strategy: cn.com.felix.core.extend.hibernate.CustomPhysicalNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
        format_sql: false
        show_sql: false
        generate_statistics: false
        cache:
          use_query_cache: true
          use_second_level_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        javax:
          cache:
            missing_cache_strategy: create
            provider: org.ehcache.jsr107.EhcacheCachingProvider
          persistence:
            sharedCache:
              mode: ALL
        temp:
          use_jdbc_metadata_defaults: false

  thymeleaf:
    mode: HTML
    cache: true
    prefix: classpath:/templates

  redis:
    database: 0
    host: 127.0.0.1
    password: ENC(oQr1JlWshemWU2hn35HZVNIPoJdjPx/N)
    port: 16379
    timeout: 10000
    # 如果使用的jedis 则将lettuce改成jedis即可
    lettuce:
      pool:
        # 最大活跃链接数 默认8
        max-active: 10
        max-wait: 10000
        # 最大空闲连接数 默认8
        max-idle: 10
        # 最小空闲连接数 默认0
        min-idle: 5
  server:
    port: ${server.port}
    # Thread 和 CPU 配置
    acceptor-thread-count: 4
    min-spare-threads: 50
    max-spare-threads: 50
    max-threads: 1000
    max-connections: 10000
    # 10秒超时
    connection-timeout: 10000
    redirect-port: 443
    compression: on
    # 文件请求大小
    max-file-size: 300MB
    max-request-size: 500MB

  data:
    redis:
      repositories:
        enabled: false

  sms:
    type: qcloud
    qcloud:
      active: true
      appid: 140
      appkey: 396
      templates: {'ORDER_NOTICE': 295597}
      sign: cracoder

#  quartz:
#    # quartz 相关属性配置
#    properties:
#      org:
#        quartz:
#          scheduler:
#            instanceName: clusteredScheduler
#            instanceId: AUTO
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#            tablePrefix: QRTZ_
#            isClustered: true
#            clusterCheckinInterval: 10000
#            useProperties: false
#          threadPool:
#            class: org.quartz.simpl.SimpleThreadPool
#            threadCount: 10
#            threadPriority: 5
#            threadsInheritContextClassLoaderOfInitializingThread: true
#    #数据库方式
#    job-store-type: jdbc